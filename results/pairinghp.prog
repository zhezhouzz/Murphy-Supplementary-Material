let i_err = (PNode (1, PCons (PNode (2, PNil), PCons (PNode (3, PNil), PNil))), PNode (4, PCons (PNode (5, PNil), PCons (PNode (6, PNil), PNil))))
Pre
let spec (pairinghp_0:pairinghp) (pairinghp_1:pairinghp)  = true
Perturbation
IN: (x0: pairinghp, x1: pairinghp) {
(x2: int) = pairinghp_min(x1: pairinghp);
(x3: pairinghp) = pairinghp_append_to_right_most(x2: int, x0: pairinghp);
(x4: int) = pairinghp_lower_bound(x3: pairinghp);
(x5: pairinghp) = pairinghp_single(x4: int)}
OUT: (x5: pairinghp, x3: pairinghp)

Default
IN: (x0: pairinghp, x1: pairinghp) {
(x2: int) = pairinghp_lower_bound(x1: pairinghp);
(x3: int) = pairinghp_upper_bound(x0: pairinghp);
(x4: pairinghp) = pairinghp_append_to_right_most(x3: int, x0: pairinghp);
(x5: pairinghp) = pairinghp_single(x2: int)}
OUT: (x5: pairinghp, x4: pairinghp)


