let i_err = (0, Node (3, Node (2, NodeS 1, Leaf), Node (5, NodeS 4, NodeS 6)))
Pre
let spec (i_0:int) (it_0:int tree)  = true
Perturbation
IN: (x0: int, x1: int tree) {
(x2: int tree) = tree_append_to_right_most(x0: int, x1: int tree);
(x3: int) = tree_lower_bound(x2: int tree);
(x4: int) = minus1(x3: int);
(x5: int) = plus1(x4: int)}
OUT: (x5: int, x1: int tree)

Default
IN: (x0: int, x1: int tree) {
(x2: int tree) = tree_node(x0: int, x1: int tree, x1: int tree);
(x3: int) = minus1(x0: int);
(x4: int tree) = tree_append_to_right_most(x3: int, x2: int tree);
(x5: int) = tree_min(x4: int tree)}
OUT: (x5: int, x1: int tree)


